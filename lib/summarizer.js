// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var PackageJson, SummarizedItem, Summarizer, crypto, fs, iced, item_types, make_esc, path, tablify, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  crypto = require('crypto');

  tablify = require('tablify');

  path = require('path');

  fs = require('fs');

  make_esc = require('iced-error').make_esc;

  PackageJson = require('./package').PackageJson;

  item_types = require('./constants').item_types;

  SummarizedItem = (function() {
    function SummarizedItem(_arg) {
      var depth, fname, parent_path, summarizer;
      parent_path = _arg.parent_path, fname = _arg.fname, summarizer = _arg.summarizer, depth = _arg.depth;
      this.parent_path = parent_path;
      this.fname = fname;
      this.summarizer = summarizer;
      this.depth = depth || 0;
      this.item_type = null;
      this.realpath = null;
      this.link = null;
      this.contents = null;
      this.hash = null;
      this.stats = null;
    }

    SummarizedItem.prototype.load_traverse = function(cb) {
      var esc, f, fnames, p, si, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "SummarizedItem::load");
      p = path.join(this.summarizer.root_dir(), this.parent_path, this.fname);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
            funcname: "SummarizedItem.load_traverse"
          });
          fs.realpath(p, esc(__iced_deferrals.defer({
            assign_fn: (function(__slot_1) {
              return function() {
                return __slot_1.realpath = arguments[0];
              };
            })(_this),
            lineno: 29
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
              funcname: "SummarizedItem.load_traverse"
            });
            fs.lstat(p, esc(__iced_deferrals.defer({
              assign_fn: (function(__slot_1) {
                return function() {
                  return __slot_1.stats = arguments[0];
                };
              })(_this),
              lineno: 30
            })));
            __iced_deferrals._fulfill();
          })(function() {
            (function(__iced_k) {
              var _ref;
              if ((_ref = _this.stats) != null ? _ref.isSymbolicLink() : void 0) {
                _this.item_type = item_types.SYMLINK;
                (function(__iced_k) {
                  __iced_deferrals = new iced.Deferrals(__iced_k, {
                    parent: ___iced_passed_deferral,
                    filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
                    funcname: "SummarizedItem.load_traverse"
                  });
                  fs.readlink(p, esc(__iced_deferrals.defer({
                    assign_fn: (function(__slot_1) {
                      return function() {
                        return __slot_1.link = arguments[0];
                      };
                    })(_this),
                    lineno: 33
                  })));
                  __iced_deferrals._fulfill();
                })(__iced_k);
              } else {
                (function(__iced_k) {
                  if (_this.stats.isFile()) {
                    _this.item_type = item_types.FILE;
                    (function(__iced_k) {
                      __iced_deferrals = new iced.Deferrals(__iced_k, {
                        parent: ___iced_passed_deferral,
                        filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
                        funcname: "SummarizedItem.load_traverse"
                      });
                      _this.hash_contents(esc(__iced_deferrals.defer({
                        assign_fn: (function(__slot_1) {
                          return function() {
                            return __slot_1.hash = arguments[0];
                          };
                        })(_this),
                        lineno: 36
                      })));
                      __iced_deferrals._fulfill();
                    })(__iced_k);
                  } else {
                    _this.contents = [];
                    _this.item_type = item_types.DIR;
                    (function(__iced_k) {
                      __iced_deferrals = new iced.Deferrals(__iced_k, {
                        parent: ___iced_passed_deferral,
                        filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
                        funcname: "SummarizedItem.load_traverse"
                      });
                      fs.readdir(_this.realpath, esc(__iced_deferrals.defer({
                        assign_fn: (function() {
                          return function() {
                            return fnames = arguments[0];
                          };
                        })(),
                        lineno: 40
                      })));
                      __iced_deferrals._fulfill();
                    })(function() {
                      (function(__iced_k) {
                        var _i, _len, _ref1, _results, _while;
                        _ref1 = fnames;
                        _len = _ref1.length;
                        _i = 0;
                        _results = [];
                        _while = function(__iced_k) {
                          var _break, _continue, _next;
                          _break = function() {
                            return __iced_k(_results);
                          };
                          _continue = function() {
                            return iced.trampoline(function() {
                              ++_i;
                              return _while(__iced_k);
                            });
                          };
                          _next = function(__iced_next_arg) {
                            _results.push(__iced_next_arg);
                            return _continue();
                          };
                          if (!(_i < _len)) {
                            return _break();
                          } else {
                            f = _ref1[_i];
                            si = _this.subitem(f);
                            (function(__iced_k) {
                              __iced_deferrals = new iced.Deferrals(__iced_k, {
                                parent: ___iced_passed_deferral,
                                filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
                                funcname: "SummarizedItem.load_traverse"
                              });
                              si.load_traverse(esc(__iced_deferrals.defer({
                                lineno: 43
                              })));
                              __iced_deferrals._fulfill();
                            })(function() {
                              return _next(_this.contents.push(si));
                            });
                          }
                        };
                        _while(__iced_k);
                      })(function() {
                        return __iced_k(_this.contents.sort(function(a, b) {
                          return a.fname.localeCompare(b.fname);
                        }));
                      });
                    });
                  }
                })(__iced_k);
              }
            })(function() {
              return cb();
            });
          });
        };
      })(this));
    };

    SummarizedItem.prototype.subitem = function(f) {
      return new SummarizedItem({
        fname: f,
        parent_path: path.join(this.parent_path, this.fname),
        summarizer: this.summarizer,
        depth: this.depth + 1
      });
    };

    SummarizedItem.prototype.signable_info = function() {
      var info;
      info = {
        depth: this.depth,
        parent_path: this.parent_path,
        item_type: this.item_type,
        fname: this.fname,
        mode: this.stats.mode
      };
      switch (this.item_type) {
        case item_types.FILE:
          info.hash = this.hash;
          info.size = this.stats.size;
          break;
        case item_types.SYMLINK:
          info.link = this.link;
      }
      return info;
    };

    SummarizedItem.prototype.walk_to_array = function(_res) {

      /*
      returns an array of all items starting at this point,
      sorted in a predictable way;
       */
      var c, _i, _len, _ref;
      _res || (_res = []);
      if (this.item_type === item_types.DIR) {
        _res.push(this.signable_info());
        _ref = this.contents;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          c.walk_to_array(_res);
        }
      } else {
        _res.push(this.signable_info());
      }
      return _res;
    };

    SummarizedItem.prototype.hash_contents = function(cb) {
      var fd, hash;
      fd = fs.createReadStream(this.realpath);
      hash = crypto.createHash('sha256');
      hash.setEncoding('hex');
      fd.on('end', function() {
        hash.end();
        return cb(null, hash.read());
      });
      fd.on('error', function(e) {
        return cb(e);
      });
      return fd.pipe(hash);
    };

    return SummarizedItem;

  })();

  Summarizer = (function() {
    function Summarizer(opts) {
      var _base, _base1;
      this.root_item = null;
      this.opts = opts || {};
      (_base = this.opts).exclude || (_base.exclude = []);
      (_base1 = this.opts).root_dir || (_base1.root_dir = '.');
      this.opts.exclude.sort();
    }

    Summarizer.prototype.set_root_item = function(ri) {
      return this.root_item = ri;
    };

    Summarizer.prototype.root_dir = function() {
      return this.opts.root_dir;
    };

    Summarizer.from_dir = function(dir, opts, cb) {
      var err, root_item, summ, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);

      /*
      takes the path to a directory and returns a Summarize instance
       */
      opts = opts || {};
      opts.root_dir || (opts.root_dir = dir);
      summ = new Summarizer(opts);
      err = null;
      root_item = new SummarizedItem({
        fname: '.',
        parent_path: '',
        summarizer: summ
      });
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/chris/git/keybase/dir-summarize/src/summarizer.iced",
            funcname: "Summarizer.from_dir"
          });
          root_item.load_traverse(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return err = arguments[0];
              };
            })(),
            lineno: 139
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          if (err == null) {
            summ.set_root_item(root_item);
          } else {
            console.log(err);
          }
          return cb(err, summ);
        };
      })(this));
    };

    Summarizer.prototype.compare_to_json_obj = function(o) {

      /*
      returns null if they are different; otherwise returns
      {
        missing: [array of missing files]
        wrong:   [files with incorrect hashes]
        orphans: [files of unknown origin]
      }
       */
      var err;
      err = {
        missing: [],
        wrong: [],
        orphans: []
      };
      return null;
    };

    Summarizer.prototype.to_json_obj = function() {

      /*
      a deterministic representation of the summary
       */
      return {
        meta: {
          version: new PackageJson().version()
        },
        exclude: this.opts.exclude,
        found: this.root_item.walk_to_array()
      };
    };

    return Summarizer;

  })();

  exports.Summarizer = Summarizer;

}).call(this);
